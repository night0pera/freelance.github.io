/* Wrapper */

#wrapper {
  @include vendor("transition", "opacity #{_duration(menu)} ease");
  position: relative;
  z-index: 1;
  overflow: hidden;

  > .bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: _palette(wrapper-bg);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 2 1'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientUnits='userSpaceOnUse' x1='0' x2='0' y1='0' y2='1'%3E%3Cstop offset='0' stop-color='%2377aa77'/%3E%3Cstop offset='1' stop-color='%234fd'/%3E%3C/linearGradient%3E%3ClinearGradient id='b' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='0' y2='1'%3E%3Cstop offset='0' stop-color='%23cf8' stop-opacity='0'/%3E%3Cstop offset='1' stop-color='%23cf8' stop-opacity='1'/%3E%3C/linearGradient%3E%3ClinearGradient id='c' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='2' y2='2'%3E%3Cstop offset='0' stop-color='%23cf8' stop-opacity='0'/%3E%3Cstop offset='1' stop-color='%23cf8' stop-opacity='1'/%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x='0' y='0' fill='url(%23a)' width='2' height='1'/%3E%3Cg fill-opacity='0.5'%3E%3Cpolygon fill='url(%23b)' points='0 1 0 0 2 0'/%3E%3Cpolygon fill='url(%23c)' points='2 1 2 0 0 0'/%3E%3C/g%3E%3C/svg%3E");
    background-size: auto, auto, 100% auto;
    background-position: center, center, top center;
    background-repeat: repeat, no-repeat, no-repeat;
    background-attachment: scroll, scroll, scroll;
    z-index: -1;

    &.fixed {
      position: fixed;
      width: 100vw;
      height: 100vh;
    }
  }

  &.fade-in {
    &:before {
      @include vendor("pointer-events", "none");
      @include vendor("transition", "opacity 1s ease-in-out");
      @include vendor("transition-delay", "0.75s");
      background: _palette(invert, bg);
      content: "";
      display: block;
      height: 100%;
      left: 0;
      opacity: 0;
      position: fixed;
      top: 0;
      width: 100%;
    }

    body.is-preload & {
      &:before {
        opacity: 1;
      }
    }
  }

  @include orientation(portrait) {
    > .bg {
      background-size: auto, auto, auto 175%;
    }
  }
}
